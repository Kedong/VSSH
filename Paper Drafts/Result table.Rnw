\documentclass[11pt, oneside]{article}  
\usepackage{geometry}                		% See geometry.pdf to learn the layout options. There are lots.
\geometry{letterpaper}   
\usepackage{graphicx}	
\usepackage{amsmath}
\usepackage{amscd}
\usepackage[tableposition=top]{caption}
\usepackage{ifthen}
\usepackage[utf8]{inputenc}
\usepackage{enumerate}
\usepackage{verbatim}
%\usepackage{mdframed}
\usepackage{color}
\definecolor{gray}{rgb}{.9,.9,.9}
\usepackage{url}
\usepackage{verbdef}% http://ctan.org/pkg/verbdef
\verbdef{\vtext}{}

\newenvironment{solution}{\begin{trivlist} \item \textbf{Solution.}}{\end{trivlist}}
\newenvironment{prob}[2][Problem]{\begin{trivlist}
\item[\hskip \labelsep {\bfseries #1}\hskip \labelsep {\bfseries #2.}]}{\end{trivlist}}

\begin{document}

<<include=FALSE>>=
library(knitr)
opts_chunk$set(
concordance=TRUE
)
@

\title{Sociology 8412 Homework \# 1}
\author{Kedong Chen}
\maketitle


<<echo=FALSE,include=FALSE>>=
## Add any libraries you need here in the header
library(sna)
library(knitr)
library(network)
library(networkMethods)
library(RCurl)
options(prompt="R > ")
options(width=65)
opts_chunk$set(comment = "R > ")
opts_chunk$set(background='white')
opts_chunk$set(tidy=TRUE)
opts_chunk$set(highlight=TRUE)
opts_chunk$set(fig.align = "center")
#knit_theme$set("seashell")
@

\fbox{%
  \parbox{\textwidth}{%
    \textbf{Instructions:} For your homework assignment you must update the complete .Rnw file and all necessary accompanying information using your github account. You should use your work from your lab to help with each homework. All homework must be written up in complete sentences and be coherent. All .Rnw files much compile or the homework will not be graded.
  }%
  }

\clearpage

\section*{Problems}
\addcontentsline{toc}{section}{Problems}
%
% Use the following environment.
% Don't forget to label each problem;
% the label is needed for the solutions' environment
\begin{prob}{1}
\label{lec12:prob1}
Creating, importing, and manipulating

 \renewcommand{\labelenumi}{(\alph{enumi})}
 \renewcommand{\labelenumii}{\roman{enumii}.}

\begin{enumerate}
\item To gain some practice in creating, importing, and manipulating relational data in R, we will start with a simple egocentric network. Using a spreadsheet program (I recommend google docs) or text editor, create an adjacency matrix with your name in the top row/column, e.g. like so:
\begin{center}
\renewcommand{\tabcolsep}{.25cm}
%\renewcommand{\arraystretch}{2}
\begin{tabular}{|c|c|c|c|c|}
\hline
My Name & $v_2$ & $v_3$ & $v_4$ & \dots \\
\hline
$v_2$ 	&		&		&	& \dots \\
\hline 
$v_3$ 	&		&		&	& \dots \\
\hline
$v_4$ 	&		&		&	& \dots \\
\hline
\vdots 	&\vdots	&\vdots	&\vdots & $\ddots$ \\
\hline
\end{tabular}
\end{center}

\noindent
Use this matrix to encode the complete egocentric network for ``those with whom you have discussed matters important to you in the last six months," with yourself as the respondent. (To protect your privacy, you may wish to use initials or numbers to identify the other persons in your personal network -- just be sure you know who they are when entering them!) Remember to enter edges from yourself to each alter (by definition, you must be adjacent), and to fill in edges among alters based on your best estimate of the relationships in question. When finished, save the resulting file in comma delimited (CSV) format, and include a print-out with your write up.

\begin{solution}
The complete egocentric network matrix is:
<<echo=FALSE>>=
url <- "https://docs.google.com/spreadsheets/d/1cP00T2vpd1kVuztttWNv3P4i26sytNip-VlNcPNNucI/pub?gid=0&single=true&output=csv"
myCsv <- getURL(url)
myData <- read.csv(textConnection(myCsv))
rownames(myData) <- myData[,1]
myData <- myData[,2:ncol(myData)]
print(myData)
@
\end{solution}


\item Within R, import your matrix using the command,

Using google docs:
<<eval=FALSE>>=
require(RCurl)
url<-"yourgoogledocpublishedascsv"
myCsv <- getURL(url)
myData<-read.csv(textConnection(myCsv))
@

Using read.csv (you need to add the .csv file to github for this to work)
<<eval=FALSE>>=
ego<-as.matrix(read.csv("myfile", row.names=1))
@

\noindent
(where ``myfile" is replaced with the full path to your matrix). Using the \emph{gplot} and \emph{plot.sociomatrix} commands from the {\tt sna} package, create (and include) the following visualization:
\begin{enumerate}
\item A labeled sociogram of your ego net, showing edges as undirected.
\item An unlabeled sociogram of your ego net, in which your vertex is colored red, kin (including spouse or partner, if applicable) are colored green, friends or coworkers are colored blue. (Hint: try creating a vector \emph{c()}, and passing it as an argument to \emph{vertex.col}; for colors, see \emph{?par}.)
\item A visualization of the associated network adjacency matrix. \\

\noindent
Hint: remember that you can use \emph{help(function)} to get help on an R function. Experiment with \emph{boxed.labels}, \emph{label.cex}, and \emph{label.col} to tweak the display for optimum readability.
\end{enumerate}

\begin{solution}
After successful matrix import (see .rnw file for details),
  \begin{enumerate}
  \item The labeled sociogram of my ego net is
  \begin{center}
<<echo=FALSE,fig.show="hide",eps=FALSE>>=
data.network = network(myData,matrix.type="adjacency",directed=F)
coords = gplot(data.network)
@
<<echo=FALSE>>=
gplot(data.network,label=rownames(myData),usearrows=F,coord=coords)
@
  \end{center}

  \item The colored unlabeled sociogram is
  \begin{center}
<<echo=FALSE>>=
relat = c("self","kin","kin","friend","friend","friend","friend","friend","friend","friend")
col = rep(NA, length(relat))
col[relat %in% "self"] = rgb(1,0,0,.8)
col[relat %in% "kin"] = rgb(0,1,0,.8)
col[relat %in% "friend"] = rgb(0,0,1,.8)
verattr = data.frame(cbind(relat,col),stringsAsFactors=FALSE)
data.network = network(data.network,vertex.attr=verattr,vertex.attrnames=colnames(verattr))
gplot(data.network,vertex.col=col,usearrows=F,coord=coords)
@
  \end{center}

  \item The visualization of the associated network adjacency matrix:
  \begin{center}
<<echo=FALSE>>=
plot.sociomatrix(data.network)
@
  \end{center}
  I include here another graph:
  \begin{center}
<<echo=FALSE>>=
gplot(data.network,label=rownames(myData),vertex.cex=0,usearrows=F,coord=coords,boxed.labels=T,label.cex=1,label.col=col,label.border=col,label.pos=5)
@
  \end{center}
  \end{enumerate}
\end{solution}


\item Using the \emph{network} command, convert your matrix ego to an undirected network object. Add a vertex attribute for alter type, using ``S" to stand for ``self," ``K" to stand for ``kin," and ``O" to stand for ``other." Use summary to verify the correctness of the encoding. Use \emph{plot} to show the network with vertices colored by alter type, \underline{without} passing vector to the plot command. (Hint: take a close look at the help for \emph{plot.network}.)

\begin{solution}
The final result, plot, and R codes are shown here.
\begin{center}
<<>>=
relat = c("S","K","K","O","O","O","O","O","O","O")
verattr_2 = data.frame(relat,stringsAsFactors=FALSE)
data.network = network(myData,matrix.type="adjacency",directed=F,
    vertex.attr=verattr_2,vertex.attrnames=colnames(verattr_2))
summary(data.network)
plot(data.network,vertex.col=as.factor(data.network%v%"relat"),
    coord=coords,vertex.cex=2)
@
\end{center}
\end{solution}

\item The personal network elicited in this exercise is often called the ``core discussion network," and has been the center of considerable controversy in recent years. Based on the above, what patterns are apparent in your personal network? How well represented are each of the above alter types? To what extent are your alters tied to each other? Does this appear to vary by alter type? (We will discuss more normal ways to asses these questions later in the course, but for now a reasoned assessment based on the immediate properties of the adjacency matrix and/or visualizations is acceptable.)

\begin{solution}
It is apparent that in my personal network, kins are connected, and my close friends are divided into two sub-divisions with connections, but the two don't directly connect between each other. Each of the above alter types is well represented. Alters are tied to those who know and form smaller groups. This does not appear to vary by alter type.
\end{solution}

\end{enumerate}

\end{prob}

 
\clearpage


\begin{prob}{2}
\label{lec12:prob2}
Working with two-mode data

 \renewcommand{\labelenumi}{(\alph{enumi})}
 \renewcommand{\labelenumii}{\roman{enumii}.}

\begin{enumerate}
\item For this assignment, you will need to run:
<<>>=
library(networkMethods) 
data(sw.incidence)
@

which you can install via the class website using:
<<eval=FALSE>>=
library(devtools)
install_github("zalmquist/networkMethods")
@

Using \emph{ls()} should reveal the object \emph{sw.incidence}. This is the incidence matrix for the famous ``Southern Women" data set from Davis, Gardner, and Gardner's \emph{Deep South} study of class and social interaction in Natchez, MS during the mid-1930s. The matrix shows the attendance of 18 women at 14 informal social events during a nine-month observation period, based on ``interviews, the records of participant observers, guest lists, and the newspapers" (DGG, p. 149). Clearly, this data is of two-mode form, with individuals as the ``row" vertices, and events as the ``column" vertices. \\

\noindent
Begin your examination of the data by printing the matrix, and plotting it using \emph{plot.sociomatrix}. Use this to provide your initial impressions of the following:
\begin{enumerate}
\item Who seems most active?
\item Are all women active in the same events?
\item Are all events equally well-attended?
\item Is any structure evident in the association of women and events?
\end{enumerate}

\begin{solution}
The printed matrix is:
<<echo=FALSE>>=
data(sw.incidence)
print(sw.incidence)
@
The sociomatrix plot is
\begin{center}
<<echo=FALSE>>=
plot.sociomatrix(sw.incidence)
@
\end{center}

  \begin{enumerate}
  \item Evelyn, Theresa and Nora seem most active.
<<echo=FALSE>>=
rowSums(sw.incidence)
@
  \item No. Some are active in E1-E9, others in E7-E14.
  \item No. Some are popular among many women, e.g. E8. Others can attract only a portion 
of women, e.g. E1 and E14.
  \item Looks like linear. With the given order of women, E1 through E14 are linearly 
related.
  \end{enumerate}
\end{solution}

\item Now, consider how individuals are connected through events. To do this, form the (valued) row projection of \emph{sw.incidence} and save it as \emph{sw.p2p}. (Hints: \emph{\%*\%} is R's inner product operator, and \emph{a \%*\% b} is the inner product of matrices \textbf{a} and \textbf{b}. To transpose a matrix, \textbf{a}, use \emph{t(a)} -- check your lecture notes if you get stuck!) \emph{sw.p2p[i,j]} should bow be the number of events that i and j have in common; verify this by comparing with \emph{sw.incidence}. Plot this matrix using \emph{plot.sociomatrix}, and use this to answer the following questions:

\begin{enumerate}
\item What does the row projection tell us about how people are connected in this social group?
\item Does the group have subdivisions?
\item Do some members seem to be more ``central" than others? if so, who?
\end{enumerate}

\begin{solution}
The R codes and the plot are shown here:
<<fig=TRUE,eps=FALSE>>==
d = sw.incidence
sw.p2p = d %*% t(d)
# Verified by comparing with sw.incidence
plot.sociomatrix(sw.p2p)
@

  \begin{enumerate}
  \item They form subdivisions. Some are very well connected. Others don't have strong 
connections with others.
  \item Seems so. Two subdivisions: 1. EVELYN LAURA THERESA BRENDA; 2. KATHERINE SYLVIA 
NORA HELEN.
  \item Yes. THERESA with a degree of 114 (EVELYN & SYLVIA both 100).
  \end{enumerate}
\end{solution}

\item Next, consider how events are connected through people. Create the column-projection of \emph{sw.incidence} (i.e., events to events via shared people) using the same methods as above. (Hint: if you get stuck, try experimenting with the transpose function). Call this \emph{sw.e2e}. \emph{sw.e2e[i,j]} should give you the number of persons attending both event i and event j -- verify that this is the case. Plot \emph{sw.e2e} using \emph{plot.sociomatrix}, and use this to answer the following:
\begin{enumerate}
\item Does the even structure have subdivisions?
\item Are some events more ``central" than others? (And, if so, what is the substantive interpretation of this?)
\item How does this structure differ from the row projection? In what ways is it similar?
\end{enumerate}

\begin{solution}
The R codes and the plot are shown here:
<<fig=TRUE,eps=FALSE>>==
sw.e2e = t(d) %*% d
# Verified by comparing with sw.incidence
plot.sociomatrix(sw.e2e)
@

  \begin{enumerate}
  \item Not really.
  \item Yes. E8 and E9. Interpretation: these events are most popular, and can promote 
social interaction among classes.
  \item Difference: This is the number of attendants per event. The matrix in the previous 
question is the number of events per person. But they are similar in that both show 
connections. In P1, relationships between people, here between events. Both indicate there 
tends to form "groups".
  \end{enumerate}
\end{solution}


\item To consider the joint person/event adjacency structure, convert the two-mode matrix to bipartite one-mode form. There are many ways to do this, but here is a shortcut:
<<message=FALSE>>=
library(network)
sw.net<-network(sw.incidence)
sw.adj<-sw.net[,]
@

\noindent
Plot the joint structure using \emph{gplot}, labeling the persons/events and coloring vertices by type. (Hint: \emph{rownames(sw.adj)} can be used to obtain the labels, which may display better if scaled with \emph{label.cex} and/or without the background boxes. Try and see. To quickly generate a vector of color codes, try using R's \emph{rep} command; \emph{rep(c(a,b),times=c(d,e))} will replicate the elements a and b, d and e times (respectively), which could prove useful. Experiment!) Also plotting \emph{sw.adj} using \emph{plot.sociomatrix}. Using the above, answer the following:
\begin{enumerate}
\item What does the layout suggest? Which nodes are close together?
\item When ``event" nodes are attached to the structure exclusively  through a particular group of ``person" nodes, what does that indicate regarding the nature of these events? What about event nodes which lie between two groups of person nodes?
\end{enumerate}

\begin{solution}
The plots are shown here:
\begin{center}
<<echo=FALSE>>=
sw.net <- network(sw.incidence)
sw.adj <- sw.net[,]
ver.col = rep(c(2,3),times=c(18,14))
gplot(sw.adj,label=rownames(sw.adj),label.cex=0.8,vertex.col=ver.col,usearrows=F)
@
\end{center}
The sociomatrix plot is:
\begin{center}
<<echo=FALSE>>=
plot.sociomatrix(sw.adj)
@
\end{center}

  \begin{enumerate}
  \item The layout suggests some events are most popular, while some people form 
subdivisions. E.g. here, E7 E8 E9 are close together in the middle. EVELYN LAURA THERESA 
BRENDA are also close, indicating a subdivision.
  \item It indicates that those events attracted the same people, and the nature is 
somewhat similar. When event nodes lie between two groups of person nodes, it indicates 
those people may have common event interests.
  \end{enumerate}
\end{solution}


\item Using \emph{gplot}, plot the projected one-mode structures (\emph{sw.p2p}, \emph{sw.e2e}). Do these resemble \emph{sw.adj}? What can we say about persons/events which are peripheral/central in their respective structures? (For added fun, you might try experimenting with \emph{edge.lwd} or \emph{edge.col}, using the matrices (or functions thereof) as arguments.)

\begin{solution}
The projected one-mode structures are:
\begin{center}
<<echo=FALSE>>=
gplot(sw.p2p,label=rownames(sw.p2p),usearrows=F,edge.lwd=sw.p2p/5,edge.col=2+1*(sw.p2p
[,]>4))
@
<<echo=FALSE>>=
gplot(sw.e2e,label=rownames(sw.e2e),usearrows=F,edge.lwd=sw.e2e/5,edge.col=2+1*(sw.e2e
[,]>5))
@
\end{center}
These pics resemble sw.adj.\\
Central (Peripheral) people: attending most (least) the same events with others.\\
Central (Peripheral) events: attended by most (least) the same people compared to other 
events.
\end{solution}


\item  One powerful feature of R is its scripting language. For instance, let's say that we were interested in examining the \underline{entailment structures} of persons and/or events. Let us define the row-wise entailment matrix of \emph{sw.incidence}, \emph{sw.rposet} to be the person by person matrix such that \emph{sw.rposet[i,j]==1} if person j attends all of i's events (i.e., if person i was at an event, then person j was also there -- but perhaps not vice versa). R can be used to construct such a matrix as follows:

<<>>=
#Create an empty matrix
sw.rposet<-matrix(0,NROW(sw.incidence), NROW(sw.incidence))
#Now, populate it using a nested "for" loop
for(i in 1:NROW(sw.incidence))            #Pick event i...
	for(j in 1:NROW(sw.incidence))	   # ... and event j
		sw.rposet[i,j]<-all(sw.incidence[j,]>=sw.incidence[i,])#compare!
rownames(sw.rposet)<-rownames(sw.incidence)		 #Name them
colnames(sw.rposet)<-rownames(sw.incidence)
@

\noindent
We can also construct a column-wise entailment matrix (i.e., i is entailed by j if everyone who attended event i also attended event j) in like manner:

<<>>=
#Create an empty matrix 
sw.cposet<-matrix(0,NCOL(sw.incidence), NCOL(sw.incidence)) 
#Now, populate it using a nested "for" loop 
for(i in 1:NCOL(sw.incidence)) #Pick event i... 
	for(j in 1:NCOL(sw.incidence)) # ... and event j 
		sw.cposet[i,j]<-all(sw.incidence[,j]>=sw.incidence[,i])#compare! 
rownames(sw.cposet)<-colnames(sw.incidence) #Name them 
colnames(sw.cposet)<-colnames(sw.incidence)
@

\noindent
Use the above scripts to create the entailment matrices, and visualize each using \emph{gplot}. Use these to answer the following (referring back to  \emph{sw.incidence} may also help):

\begin{enumerate}
\item What do paths in either structure tell us?
\item What do mutual (i.e., bidirectional) dyads mean?
\item What is special about isolates? (Hint: why is Helen an isolate?)
\end{enumerate}

\begin{solution}
The R codes for creating the entailment matrices and the plots are:
<<echo=TRUE>>=
#Create an empty matrix
sw.rposet<-matrix(0,NROW(sw.incidence), NROW(sw.incidence))
#Now, populate it using a nested "for" loop
for(i in 1:NROW(sw.incidence)) #Pick event i...
  for(j in 1:NROW(sw.incidence)) # ... and event j
    sw.rposet[i,j]<-all(sw.incidence[j,]>=sw.incidence[i,])#compare!
rownames(sw.rposet)<-rownames(sw.incidence) #Name them
colnames(sw.rposet)<-rownames(sw.incidence)
gplot(sw.rposet,label=rownames(sw.rposet),usearrows=T)
@
<<echo=TRUE>>=
#Create an empty matrix
sw.cposet<-matrix(0,NCOL(sw.incidence), NCOL(sw.incidence))
#Now, populate it using a nested "for" loop
for(i in 1:NCOL(sw.incidence)) #Pick event i...
  for(j in 1:NCOL(sw.incidence)) # ... and event j
    sw.cposet[i,j]<-all(sw.incidence[,j]>=sw.incidence[,i])#compare!
rownames(sw.cposet)<-colnames(sw.incidence) #Name them
colnames(sw.cposet)<-colnames(sw.incidence)
gplot(sw.cposet,label=rownames(sw.cposet),usearrows=T)
@

  \begin{enumerate}
  \item The paths in either structure tell us that one event or person can be inferred 
from another event or person connected. If the arrow is from A to B, then A is a subset of 
B, that is, A can be inferred from B.
  \item Mutual dyad means the connected two events or people are structually equivalent, 
i.e. they can be inferred from each other.
  \item Isolates indicate that they are structually different from all other nodes, i.e. 
they cannot be inferred from other events/people, and other events/people cannot be 
inferred from them, either.
  \end{enumerate}
\end{solution}

\end{enumerate}

\end{prob}

\end{document}

